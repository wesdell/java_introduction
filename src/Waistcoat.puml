@startuml
class ExternalPocket {
  + isAvailablePocket(boolean): boolean
}
class InternalPocket {
  + isAvailablePocket(boolean): boolean
}
class Main {
  + main(String[]): void
}
abstract class Pocket {
  - content: String
  - openPocket: boolean
  + close(): void
  + isAvailable(): boolean
  + isOpenPocket(): boolean
  + open(): void
  + isAvailablePocket(boolean): boolean
  + getContent(): String
  + save(String): void
}
class Waistcoat {
  - pockets: Pocket[]
  + POCKETS_AMOUNT: int
  - openWaistcoat: boolean
  - isValidPocketNumber(int): boolean
  - isOpenWaistcoat(): String
  + close(): void
  + openPocket(int): void
  + getPocketsContent(): String
  + toString(): String
  + save(int, String): void
  + open(): void
}

ExternalPocket  --|>  Pocket
InternalPocket  --|>  Pocket
@enduml